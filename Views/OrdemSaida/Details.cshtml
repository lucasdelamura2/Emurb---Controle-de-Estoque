@model EmurbEstoque.Models.ItensOS
@{
    ViewData["Title"] = "Lançar Itens da Saída";
    Layout = "~/Views/_Layout.cshtml";
    
    // Recupera dados complexos do ViewBag (enviados pelo Controller)
    var ordem = ViewBag.Ordem as EmurbEstoque.Models.OrdemSaida;
    var itensNaOrdem = ViewBag.ItensNaOrdem as List<EmurbEstoque.Models.ItensOS>;
    var nomesLotes = ViewBag.NomesLotes as Dictionary<int, string>;
    var nomesProdutos = ViewBag.NomesProdutos as Dictionary<int, string>;
    var lotesInfo = ViewBag.LotesInfo as Dictionary<int, EmurbEstoque.Models.Lote>;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="mb-0">Ordem de Saída N°: @ordem.IdOrdSai</h1>
    <a class="btn btn-secondary" href="@Url.Action("Index","OrdemSaida")">
        <i class="bi bi-check-circle me-1"></i> Concluir e Voltar
    </a>
</div>
<div class="card p-3 mb-4 bg-light border-0 shadow-sm">
    <div class="row">
        <div class="col-md-6">
            <strong>Data da Saída:</strong> @ordem.DataSaida.ToString("dd/MM/yyyy")
        </div>
        </div>
</div>

<hr />

<h3 class="h5">Adicionar Item (Retirada de Lote)</h3>
<form asp-action="AdicionarItem" method="post" id="form-add-item" class="row g-3 p-3 border rounded mb-4">
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
    
    <input type_hidden asp-for="OrdSaiId" />

    <div class="col-md-8">
        <label asp-for="LoteId" class="form-label"></label>
        <select asp-for="LoteId" asp-items="ViewBag.ListaLotesDisponiveis" class="form-select">
            <option value="">-- Selecione o Lote (Produto - Saldo) --</option>
        </select>
        <span asp-validation-for="LoteId" class="text-danger"></span>
    </div>

    <div class="col-md-4">
        <label asp-for="Qtd" class="form-label"></label>
        <input asp-for="Qtd" type="number" class="form-control" />
        <span asp-validation-for="Qtd" class="text-danger"></span>
    </div>

    <div class="col-12 text-end">
        <button type="submit" class="btn btn-success">
            <i class="bi bi-plus"></i> Adicionar Item à Saída
        </button>
    </div>
</form>

<h3 class="h5">Itens já Lançados nesta Saída</h3>
<table class="table table-sm table-striped table-bordered">
    <thead>
        <tr>
            <th>Lote de Origem</th>
            <th>Produto</th>
            <th>Quantidade Retirada</th>
        </tr>
    </thead>
    <tbody>
        @if (itensNaOrdem.Count == 0)
        {
            <tr>
                <td colspan="3" class="text-center text-muted">Nenhum item adicionado a esta ordem ainda.</td>
            </tr>
        }
        @foreach (var item in itensNaOrdem)
        {
            // Pega o Lote completo para achar o ProdutoId
            var lote = lotesInfo.GetValueOrDefault(item.LoteId);
            var nomeProduto = (lote != null) ? nomesProdutos.GetValueOrDefault(lote.ProdutoId, "???") : "???";

            <tr>
                <td>@item.LoteId</td>
                <td>@nomeProduto</td>
                <td>@item.Qtd</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}